openapi: 3.0.3

info:
  title: "Numismatics platform ${VERSION_APP}"
  description: This is a place where numismatists can catalog, sell, buy and change their coins and banknotes.
  license:
    name: GPL
    url: https://www.gnu.org/licenses/gpl-3.0.html
  version: 2.0.0

servers:
  - url: http://localhost:8080/v2

tags:
  - name: lot
    description: Элемент коллекции

paths:

  /create:
    post:
      tags:
        - lot
      summary: Create lot
      operationId: lotCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LotCreateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotCreateResponse'

  /read:
    post:
      tags:
        - lot
      summary: Read lot
      operationId: lotRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LotReadRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotReadResponse'

  /update:
    post:
      tags:
        - lot
      summary: Update lot
      operationId: lotUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LotUpdateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotUpdateResponse'

  /delete:
    post:
      tags:
        - lot
      summary: Delete lot
      operationId: lotDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LotDeleteRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotDeleteResponse'

  /search:
    post:
      tags:
        - lot
      summary: Search lots
      operationId: lotsSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LotSearchRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotSearchResponse'

components:

  schemas:

#    $ref: './api-v1.yaml#/components/schemas'

    ## ЛОТЫ


    ILotRequest:
      description: Базовый интерфейс для всех запросов работы с лотами
      type: object
      properties:
        debug:
          $ref: './api-core.yaml#/components/schemas/Debug'
        requestType:
          description: Поле-дескриминатор для вычисления типа запроса
          type: string
      discriminator:
        propertyName: requestType
        mapping:
          create: '#/components/schemas/LotCreateRequest'
          read: '#/components/schemas/LotReadRequest'
          update: '#/components/schemas/LotUpdateRequest'
          delete: '#/components/schemas/LotDeleteRequest'
          search: '#/components/schemas/LotSearchRequest'

    ILotResponse:
      description: Базовый интерфейс для всех ответов работы с лотами
      type: object
      allOf:
        - $ref: './api-core.yaml#/components/schemas/Response'
        - type: object
          properties:
            responseType:
              description: Поле-дескриминатор для вычисления типа запроса
              type: string
          discriminator:
            propertyName: responseType
            mapping:
              create: '#/components/schemas/LotCreateResponse'
              read: '#/components/schemas/LotReadResponse'
              update: '#/components/schemas/LotUpdateResponse'
              delete: '#/components/schemas/LotDeleteResponse'
              search: '#/components/schemas/LotSearchResponse'
              ws_init: '#/components/schemas/LotWSInitCloseResponse'
              ws_close: '#/components/schemas/LotWSInitCloseResponse'

    LotResponseV2:
      type: object
      allOf:
        - $ref: './api-v1.yaml#/components/schemas/LotResponse'
        - type: object
          properties:
            section:
              $ref: './api-references.yaml#/components/schemas/Section'

    OneLotResponse:
      description: Ответ с одним лотом
      type: object
      properties:
        lot:
          $ref: '#/components/schemas/LotResponseV2'

    ManyLotsResponse:
      description: Ответ с несколькими лотами
      type: object
      properties:
        lots:
          type: array
          items:
            $ref: '#/components/schemas/LotResponseV2'

    # создание лота
    LotCreateObjectV2:
      type: object
      allOf:
        - $ref: './api-v1.yaml#/components/schemas/LotCreateObject'
        - type: object
          properties:
            sectionId:
              $ref: './api-core.yaml#/components/schemas/EntityId'

    LotCreateRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/ILotRequest'
        - type: object
          properties:
            lot:
              $ref: '#/components/schemas/LotCreateObjectV2'

    LotCreateResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ILotResponse'
        - $ref: '#/components/schemas/OneLotResponse'

    # чтение лота
    LotReadRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/ILotRequest'
        - type: object
          properties:
            lot:
              $ref: './api-v1.yaml#/components/schemas/LotReadObject'

    LotReadResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ILotResponse'
        - $ref: '#/components/schemas/OneLotResponse'

    # изменение лота
    LotUpdateObjectV2:
      type: object
      allOf:
        - $ref: './api-v1.yaml#/components/schemas/LotUpdateObject'
        - type: object
          properties:
            sectionId:
              $ref: './api-core.yaml#/components/schemas/EntityId'

    LotUpdateRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/ILotRequest'
        - type: object
          properties:
            lot:
              $ref: '#/components/schemas/LotUpdateObjectV2'

    LotUpdateResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ILotResponse'
        - $ref: '#/components/schemas/OneLotResponse'

    # удаление лота
    LotDeleteRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/ILotRequest'
        - type: object
          properties:
            lot:
              $ref: './api-v1.yaml#/components/schemas/LotDeleteObject'

    LotDeleteResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ILotResponse'
        - $ref: '#/components/schemas/OneLotResponse'

    # поиск лотов
    LotSearchFilterV2:
      type: object
      allOf:
        - $ref: './api-v1.yaml#/components/schemas/LotSearchFilter'
        - type: object
          properties:
            sectionId:
              description: Идентификатор раздела (0 - не учитывать)
              $ref: './api-core.yaml#/components/schemas/EntityId'

    LotSearchRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/ILotRequest'
        - type: object
          properties:
            filter:
              $ref: '#/components/schemas/LotSearchFilterV2'

    LotSearchResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ILotResponse'
        - $ref: '#/components/schemas/ManyLotsResponse'

    # инициализация и закрытие
    LotWSInitCloseResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ILotResponse'
